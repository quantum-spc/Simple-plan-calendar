plugins {
    id 'org.springframework.boot' version '2.7.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10' // querydsl
}

group = 'shop.qtmspc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootWar {
    archiveName("ROOT.war")
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client'

    implementation 'com.querydsl:querydsl-jpa:5.0.0' // querydsl
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0' // querydsl

    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time' // 타임리프
    implementation 'mysql:mysql-connector-java' // mysql
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security' // 비밀번호 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4' // Jasypt // 데이터베이스 접속정보 암호화
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2' // mybatis
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16' // log4j2
}

test {
    useJUnitPlatform()
}

// querydsl 세팅 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
// querydsl 세팅 끝
